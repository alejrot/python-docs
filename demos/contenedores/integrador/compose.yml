name: demo-integrador


services:

  frontend_flet:    
    build: 
      context: frontend/    # ruta al Dockerfile
      # args:
      #   VERSION_PYTHON: 3.13.7-slim-trixie   # Debian 13 (recortada)
    image: tabla_frontend_flet-web:v1
    ports:
      - ${PUERTO_FRONT:-8000}:8000
    restart: always
    networks:
      - red-frontend
    depends_on: 
      - backend_fastapi


  backend_fastapi:    
    build:
      context: backend/    # ruta al Dockerfile
      # args:
      #   VERSION_PYTHON: 3.13.7-slim-trixie   # Debian 13 (recortada)
    image: tabla_backend_fastapi:v1
    ports:
      - ${PUERTO_BACK:-8000}:8000
    depends_on: 
      base_datos:
          restart: true
          condition: service_healthy
          required: true
    restart: always
    environment:
      TAG_LENGUAJE: "ES_AR"
      POSTGRES_DB:       ${NOMBRE_DB:-personas_tabla}
      POSTGRES_DOMINIO:  base_datos
      POSTGRES_USER:     ${USUARIO:-noname}
      POSTGRES_PASSWORD_FILE: /run/secrets/secreto
    secrets:
      - secreto
    networks:
      - red-frontend
      - red-database


  base_datos:
    restart: always
    image: postgres:17.2-bookworm     
    environment:
      POSTGRES_USER:     ${USUARIO:-noname}
      POSTGRES_PASSWORD_FILE: /run/secrets/secreto
      POSTGRES_DB:       ${NOMBRE_DB:-personas_tabla}
    ports:
      - ${PUERTO_DB:-5432}:5432
    volumes:
      - volumen_db:/var/lib/postgresql/data
    secrets:
      - secreto
    networks:
      - red-database
    healthcheck:  
      test: ["CMD-SHELL", "psql -U ${USUARIO:-noname} -d ${NOMBRE_DB:-personas_tabla} -c 'SELECT 1' || exit 1"]  
      interval: 10s
      timeout: 60s
      retries: 5


networks:
  red-frontend:
  red-database:


volumes:
  volumen_db:


secrets:
  secreto:
    file: ./secreto.txt    
    # file: $HOME/secreto.txt   